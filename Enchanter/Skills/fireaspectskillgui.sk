function fireaspectskill(p: player):
	if {faneedupdate::%{_p}'s uuid%} is true:
		open chest inventory with 1 row named "&c&lFire Aspect Skill" to {_p}
		wait 1 tick
		close {_p}'s inventory
		wait 1 tick
		open chest inventory with 1 row named "&c&lFire Aspect Skill" to {_p}
		loop integers between 0 and 9:
			set slot loop-value of {_p}'s current inventory to {faskill::%{_p}'s uuid%::%loop-integer%}
			set {faneedupdate::%{_p}'s uuid%} to false
	else:
		open chest inventory with 1 row named "&c&lFire Aspect Skill" to {_p}
		loop integers between 0 and 9:
			set slot loop-value of {_p}'s current inventory to {faskill::%{_p}'s uuid%::%loop-integer%}
command /faskill:
	permission: *
	trigger:
		fireaspectskill(player)
on inventory close:
	if name of event-inventory is "&c&lFire Aspect Skill":
		if event-inventory is not player's inventory:
			loop integers between 0 and 9:
				if loop-integer = 0:
					if {shlevel::%player's uuid%} is less than 1:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&fSharpness &8[&fT1&8]"
						set slot loop-integer of event-inventory to {_tsh2}
					else:
						set {_tempfa} to a blaze powder named "&cFire Aspect &8[&cT1&8]"
						set line 1 of lore of {_tempfa} to "&7----------"
						set line 2 of lore of {_tempfa} to "&f→ &4+1 Fire Aspect level"
						set line 3 of lore of {_tempfa} to "&c&lCost: &a1 Skill Point"
						set line 4 of lore of {_tempfa} to "&7----------"
						enchant {_tempfa} with fire aspect 
						set slot loop-integer of event-inventory to {_tempfa}
						if {falevel::%player's uuid%} is less than 1:
							set line 5 of lore of {_tempfa} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempfa}
						else:
							set line 5 of lore of {_tempfa} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempfa}
				if loop-integer = 1:
					if {falevel::%player's uuid%} is less than 1:
						set {_tfa2} to barrier named "&cLocked"
						set line 1 of lore of {_tfa2} to "&4&lRequirements:"
						set line 2 of lore of {_tfa2} to "&c- &r&cFire Aspect &8[&cT1&8]"
						set line 3 of lore of {_tfa2} to "&c- 3 Learned Skills"
						set slot loop-integer of event-inventory to {_tfa2}
					else:
						set {_tempfa2} to a lava bucket named "&cFire Aspect &8[&cT2&8]"
						set line 1 of lore of {_tempfa2} to "&7----------"
						set line 2 of lore of {_tempfa2} to "&f→ &4+1 Fire Aspect level"
						set line 3 of lore of {_tempfa2} to "&c&lCost: &a3 Skill Points"
						set line 4 of lore of {_tempfa2} to "&7----------"
						enchant {_tempfa2} with fire aspect 2
						set slot loop-integer of event-inventory to {_tempfa2}
						if {falevel::%player's uuid%} is less than 2:
							set line 5 of lore of {_tempfa2} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempfa2}
						else:
							set line 5 of lore of {_tempfa2} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempfa2}
				if loop-integer = 2:
					if {falevel::%player's uuid%} is less than 2:
						set {_tfa3} to barrier named "&cLocked"
						set line 1 of lore of {_tfa3} to "&4&lRequirements:"
						set line 2 of lore of {_tfa3} to "&c- &r&cFire Aspect &8[&cT2&8]"
						set line 3 of lore of {_tfa3} to "&c- &r&c5 Learned Skills"
						set slot loop-integer of event-inventory to {_tfa3}
					else:
						set {_tempfa3} to a fire charge named "&cFire Aspect &8[&cT3&8]"
						set line 1 of lore of {_tempfa3} to "&7----------"
						set line 2 of lore of {_tempfa3} to "&f→ &4+1 Fire Aspect Level"
						set line 3 of lore of {_tempfa3} to "&c&lCost: &a4 Skill Points"
						set line 4 of lore of {_tempfa3} to "&7----------"
						enchant {_tempfa3} with fire aspect 3
						set slot loop-integer of event-inventory to {_tempfa3}
						if {falevel::%player's uuid%} is less than 3:
							set line 5 of lore of {_tempfa3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempfa3}
						else:
							set line 5 of lore of {_tempfa3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempfa3}
				if loop-integer = 3:
					if {falevel::%player's uuid%} is less than 3:
						set {_tfa3} to barrier named "&cLocked"
						set line 1 of lore of {_tfa3} to "&4&lRequirements:"
						set line 2 of lore of {_tfa3} to "&c- &r&cFire Aspect &8[&cT3&8]"
						set line 3 of lore of {_tfa3} to "&c- &r&c5 Learned Skills"
						set slot loop-integer of event-inventory to {_tfa3}
					else:
						set {_tempfa3} to a fire charge named "&cFire Aspect &8[&cT4&8]"
						set line 1 of lore of {_tempfa3} to "&7----------"
						set line 2 of lore of {_tempfa3} to "&f→ &4+1 Fire Aspect Level"
						set line 3 of lore of {_tempfa3} to "&c&lCost: &a5 Skill Points"
						set line 4 of lore of {_tempfa3} to "&7----------"
						enchant {_tempfa3} with fire aspect 4
						set slot loop-integer of event-inventory to {_tempfa3}
						if {falevel::%player's uuid%} is less than 4:
							set line 5 of lore of {_tempfa3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempfa3}
						else:
							set line 5 of lore of {_tempfa3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempfa3}
				if loop-integer = 4:
					if {falevel::%player's uuid%} is less than 4:
						set {_tfa3} to barrier named "&cLocked"
						set line 1 of lore of {_tfa3} to "&4&lRequirements:"
						set line 2 of lore of {_tfa3} to "&c- &r&cFire Aspect &8[&cT4&8]"
						set line 3 of lore of {_tfa3} to "&c- &r&c5 Learned Skills"
						set slot loop-integer of event-inventory to {_tfa3}
					else:
						set {_tempfa3} to a fire charge named "&cFire Aspect &8[&cT5&8]"
						set line 1 of lore of {_tempfa3} to "&7----------"
						set line 2 of lore of {_tempfa3} to "&f→ &4+1 Fire Aspect Level"
						set line 3 of lore of {_tempfa3} to "&c&lCost: &a6 Skill Points"
						set line 4 of lore of {_tempfa3} to "&7----------"
						enchant {_tempfa3} with fire aspect 5
						set slot loop-integer of event-inventory to {_tempfa3}
						if {falevel::%player's uuid%} is less than 5:
							set line 5 of lore of {_tempfa3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempfa3}
						else:
							set line 5 of lore of {_tempfa3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempfa3}
				if loop-integer = 5:
					if {falevel::%player's uuid%} is less than 5:
						set {_tfa3} to barrier named "&cLocked"
						set line 1 of lore of {_tfa3} to "&4&lRequirements:"
						set line 2 of lore of {_tfa3} to "&c- &r&cFire Aspect &8[&cT5&8]"
						set line 3 of lore of {_tfa3} to "&c- &r&c5 Learned Skills"
						set slot loop-integer of event-inventory to {_tfa3}
					else:
						set {_tempfa3} to a fire charge named "&cFire Aspect &8[&cT6&8]"
						set line 1 of lore of {_tempfa3} to "&7----------"
						set line 2 of lore of {_tempfa3} to "&f→ &4Gain invisibility while on fire"
						set line 3 of lore of {_tempfa3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempfa3} to "&7----------"
						enchant {_tempfa3} with fire aspect 6
						set slot loop-integer of event-inventory to {_tempfa3}
						if {falevel::%player's uuid%} is less than 6:
							set line 5 of lore of {_tempfa3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempfa3}
						else:
							set line 5 of lore of {_tempfa3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempfa3}
				if loop-integer = 6:
					if {falevel::%player's uuid%} is less than 6:
						set {_tfa3} to barrier named "&cLocked"
						set line 1 of lore of {_tfa3} to "&4&lRequirements:"
						set line 2 of lore of {_tfa3} to "&c- &r&cFire Aspect &8[&cT6&8]"
						set line 3 of lore of {_tfa3} to "&c- &r&c5 Learned Skills"
						set slot loop-integer of event-inventory to {_tfa3}
					else:
						set {_tempfa3} to a fire charge named "&cFire Aspect &8[&cT7&8]"
						set line 1 of lore of {_tempfa3} to "&7----------"
						set line 2 of lore of {_tempfa3} to "&f→ &4Gain regeneration while on fire"
						set line 3 of lore of {_tempfa3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempfa3} to "&7----------"
						enchant {_tempfa3} with fire aspect 7
						set slot loop-integer of event-inventory to {_tempfa3}
						if {falevel::%player's uuid%} is less than 7:
							set line 5 of lore of {_tempfa3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempfa3}
						else:
							set line 5 of lore of {_tempfa3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempfa3}
				if loop-integer = 7:
					if {falevel::%player's uuid%} is less than 7:
						set {_tfa3} to barrier named "&cLocked"
						set line 1 of lore of {_tfa3} to "&4&lRequirements:"
						set line 2 of lore of {_tfa3} to "&c- &r&cFire Aspect &8[&cT7&8]"
						set line 3 of lore of {_tfa3} to "&c- &r&c5 Learned Skills"
						set slot loop-integer of event-inventory to {_tfa3}
					else:
						set {_tempfa3} to a fire charge named "&cFire Aspect &8[&cT8&8]"
						set line 1 of lore of {_tempfa3} to "&7----------"
						set line 2 of lore of {_tempfa3} to "&f→ &4Gain resistance while on fire"
						set line 3 of lore of {_tempfa3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempfa3} to "&7----------"
						enchant {_tempfa3} with fire aspect 8
						set slot loop-integer of event-inventory to {_tempfa3}
						if {falevel::%player's uuid%} is less than 8:
							set line 5 of lore of {_tempfa3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempfa3}
						else:
							set line 5 of lore of {_tempfa3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempfa3}
				if loop-integer = 8:
					set slot loop-integer of event-inventory to a nether star named "&cBack to &3&nSkill Tree"
				set {faskill::%player's uuid%::%loop-integer%} to slot loop-integer of event-inventory
				
on inventory click:
	if name of event-inventory is "&c&lFire Aspect Skill":
		cancel event
		event-inventory is not player's inventory
		if event-slot is 8:
			close player's inventory
			op the player
			make player execute command "/scythegui"
			deop the player
		if event-slot is 0:
			if:
				{falevel::%player's uuid%} = 0
				{shlevel::%player's uuid%} is greater than 0
			then:
				if player's held item is any hoe:
					if {skillpoints::%player's uuid%} is greater than or equal to 6: # FIRE ASPECT 1 UPGRADE
						subtract 6 from {skillpoints::%player's uuid%}
						enchant player's tool with fire aspect 1
						send "&a&lUpgrade Purchased!" to player
						add 1 to {falevel::%player's uuid%}
						add 1 to {amountofskills::%player's uuid%}
						set {shneedupdate::%player's uuid%} to true
						set {crneedupdate::%player's uuid%} to true
						set {xpneedupdate::%player's uuid%} to true
						set {msneedupdate::%player's uuid%} to true
						close player's inventory
					else:
						send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 1:
			if {falevel::%player's uuid%} = 1:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 3:
						if {skillpoints::%player's uuid%} is greater than or equal to 8: # SECOND FIRE ASPECT UPGRADE
							subtract 8 from {skillpoints::%player's uuid%}
							enchant player's tool with fire aspect 2
							send "&a&lUpgrade Purchased!" to player
							add 1 to {falevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this skill!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 2:
			if {falevel::%player's uuid%} = 2:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 4: # THIRD FIRE ASPECT UPGRADE
							subtract 4 from {skillpoints::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							enchant player's tool with fire aspect 3
							add 1 to {falevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
		else if event-slot is 3:
			if {falevel::%player's uuid%} = 3:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 5: # FOURTH FIRE ASPECT UPGRADE
							subtract 5 from {skillpoints::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							enchant player's tool with fire aspect 4
							add 1 to {falevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 4:
			if {falevel::%player's uuid%} = 4:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 6: # FIFTH FIRE ASPECT UPGRADE
							subtract 6 from {skillpoints::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							enchant player's tool with fire aspect 5
							add 1 to {falevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 5:
			if {falevel::%player's uuid%} = 5:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # SIXTH FIRE ASPECT UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {burningboost::%player's uuid%} to 1
							add 1 to {falevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 6:
			if {falevel::%player's uuid%} = 6:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # SEVENTH FIRE ASPECT UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {burningboost::%player's uuid%} to 2
							add 1 to {falevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 7:
			if {falevel::%player's uuid%} = 7:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # EIGTH FIRE ASPECT UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {burningboost::%player's uuid%} to 3
							add 1 to {falevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop