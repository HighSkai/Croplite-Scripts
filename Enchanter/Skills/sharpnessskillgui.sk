function sharpnessskill(p: player):
	if {shneedupdate::%{_p}'s uuid%} is true:
		open chest inventory with 1 row named "&f&lSharpness Skill" to {_p}
		wait 1 tick
		close {_p}'s inventory
		wait 1 tick
		open chest inventory with 1 row named "&f&lSharpness Skill" to {_p}
		loop integers between 0 and 9:
			set slot loop-value of {_p}'s current inventory to {shskill::%{_p}'s uuid%::%loop-integer%}
			set {shneedupdate::%{_p}'s uuid%} to false
	else:
		open chest inventory with 1 row named "&f&lSharpness Skill" to {_p}
		loop integers between 0 and 9:
			set slot loop-value of {_p}'s current inventory to {shskill::%{_p}'s uuid%::%loop-integer%}
command /shskill:
	permission: *
	trigger:
		sharpnessskill(player)
on inventory close:
	if name of event-inventory is "&f&lSharpness Skill":
		if event-inventory is not player's inventory:
			loop integers between 0 and 9:
				if loop-integer = 8:
					set slot loop-integer of event-inventory to a nether star named "&cBack to &3&nSkill Tree"
				if loop-integer = 0:
					set {_temper} to a wooden sword named "&fSharpness &8[&fT1&8]"
					set line 1 of lore of {_temper} to "&7----------"
					set line 2 of lore of {_temper} to "&f→ &4+5 Sharpness Levels"
					set line 3 of lore of {_temper} to "&c&lCost: &a1 Skill Point"
					set line 4 of lore of {_temper} to "&7----------"
					if {shlevel::%player's uuid%} is less than 1:	
						set line 5 of lore of {_temper} to "&cNot Purchased"
						set slot loop-integer of event-inventory to {_temper}
					else:
						set line 5 of lore of {_temper} to "&aPurchased"
						set slot loop-integer of event-inventory to {_temper}
				if loop-integer = 1:
					if {shlevel::%player's uuid%} is less than 1:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&fSharpness &8[&fT1&8]"
						set slot loop-integer of event-inventory to {_tsh2}
					else:
						set {_tempsh} to a wooden sword named "&fSharpness &8[&fT2&8]"
						set line 1 of lore of {_tempsh} to "&7----------"
						set line 2 of lore of {_tempsh} to "&f→ &4+5 Sharpness levels"
						set line 3 of lore of {_tempsh} to "&c&lCost: &a3 Skill Points"
						set line 4 of lore of {_tempsh} to "&7----------"
						enchant {_tempsh} with sharpness 2
						set slot loop-integer of event-inventory to {_tempsh}
						if {shlevel::%player's uuid%} is less than 2:
							set line 5 of lore of {_tempsh} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempsh}
						else:
							set line 5 of lore of {_tempsh} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempsh}
				if loop-integer = 2:
					if {shlevel::%player's uuid%} is less than 2:
						set {_tsh3} to barrier named "&cLocked"
						set line 1 of lore of {_tsh3} to "&4&lRequirements:"
						set line 2 of lore of {_tsh3} to "&c- &r&fSharpness &8[&fT2&8]"
						set line 3 of lore of {_tsh3} to "&c- &r&f5 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh3}
					else:
						set {_tempsh3} to a wooden sword named "&fSharpness &8[&fT3&8]"
						set line 1 of lore of {_tempsh3} to "&7----------"
						set line 2 of lore of {_tempsh3} to "&f→ &4+5 Sharpness levels"
						set line 3 of lore of {_tempsh3} to "&c&lCost: &a4 Skill Points"
						set line 4 of lore of {_tempsh3} to "&7----------"
						enchant {_tempsh3} with sharpness 3
						set slot loop-integer of event-inventory to {_tempsh3}
						if {shlevel::%player's uuid%} is less than 3:
							set line 5 of lore of {_tempsh3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempsh3}
						else:
							set line 5 of lore of {_tempsh3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempsh3}
				if loop-integer = 3:
					if {shlevel::%player's uuid%} is less than 3:
						set {_tsh3} to barrier named "&cLocked"
						set line 1 of lore of {_tsh3} to "&4&lRequirements:"
						set line 2 of lore of {_tsh3} to "&c- &r&fSharpness &8[&fT3&8]"
						set line 3 of lore of {_tsh3} to "&c- &r&f5 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh3}
					else:
						set {_tempsh3} to a wooden sword named "&fSharpness &8[&fT4&8]"
						set line 1 of lore of {_tempsh3} to "&7----------"
						set line 2 of lore of {_tempsh3} to "&f→ &4+5 Sharpness levels"
						set line 3 of lore of {_tempsh3} to "&c&lCost: &a5 Skill Points"
						set line 4 of lore of {_tempsh3} to "&7----------"
						enchant {_tempsh3} with sharpness 4
						set slot loop-integer of event-inventory to {_tempsh3}
						if {shlevel::%player's uuid%} is less than 4:
							set line 5 of lore of {_tempsh3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempsh3}
						else:
							set line 5 of lore of {_tempsh3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempsh3}
				if loop-integer = 4:
					if {shlevel::%player's uuid%} is less than 4:
						set {_tsh3} to barrier named "&cLocked"
						set line 1 of lore of {_tsh3} to "&4&lRequirements:"
						set line 2 of lore of {_tsh3} to "&c- &r&fSharpness &8[&fT4&8]"
						set line 3 of lore of {_tsh3} to "&c- &r&f5 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh3}
					else:
						set {_tempsh3} to a wooden sword named "&fSharpness &8[&fT5&8]"
						set line 1 of lore of {_tempsh3} to "&7----------"
						set line 2 of lore of {_tempsh3} to "&f→ &4+5 Sharpness levels"
						set line 3 of lore of {_tempsh3} to "&c&lCost: &a6 Skill Points"
						set line 4 of lore of {_tempsh3} to "&7----------"
						enchant {_tempsh3} with sharpness 5
						set slot loop-integer of event-inventory to {_tempsh3}
						if {shlevel::%player's uuid%} is less than 5:
							set line 5 of lore of {_tempsh3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempsh3}
						else:
							set line 5 of lore of {_tempsh3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempsh3}
				if loop-integer = 5:
					if {shlevel::%player's uuid%} is less than 5:
						set {_tsh3} to barrier named "&cLocked"
						set line 1 of lore of {_tsh3} to "&4&lRequirements:"
						set line 2 of lore of {_tsh3} to "&c- &r&fSharpness &8[&fT5&8]"
						set line 3 of lore of {_tsh3} to "&c- &r&f5 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh3}
					else:
						set {_tempsh3} to a wooden sword named "&fSharpness &8[&fT6&8]"
						set line 1 of lore of {_tempsh3} to "&7----------"
						set line 2 of lore of {_tempsh3} to "&f→ &4+5 Sharpness levels"
						set line 3 of lore of {_tempsh3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempsh3} to "&7----------"
						enchant {_tempsh3} with sharpness 6
						set slot loop-integer of event-inventory to {_tempsh3}
						if {shlevel::%player's uuid%} is less than 6:
							set line 5 of lore of {_tempsh3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempsh3}
						else:
							set line 5 of lore of {_tempsh3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempsh3}
				if loop-integer = 6:
					if {shlevel::%player's uuid%} is less than 6:
						set {_tsh3} to barrier named "&cLocked"
						set line 1 of lore of {_tsh3} to "&4&lRequirements:"
						set line 2 of lore of {_tsh3} to "&c- &r&fSharpness &8[&fT6&8]"
						set line 3 of lore of {_tsh3} to "&c- &r&f5 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh3}
					else:
						set {_tempsh3} to a wooden sword named "&fSharpness &8[&fT7&8]"
						set line 1 of lore of {_tempsh3} to "&7----------"
						set line 2 of lore of {_tempsh3} to "&f→ &4+5 Sharpness levels"
						set line 3 of lore of {_tempsh3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempsh3} to "&7----------"
						enchant {_tempsh3} with sharpness 7
						set slot loop-integer of event-inventory to {_tempsh3}
						if {shlevel::%player's uuid%} is less than 7:
							set line 5 of lore of {_tempsh3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempsh3}
						else:
							set line 5 of lore of {_tempsh3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempsh3}
				if loop-integer = 7:
					if {shlevel::%player's uuid%} is less than 7:
						set {_tsh3} to barrier named "&cLocked"
						set line 1 of lore of {_tsh3} to "&4&lRequirements:"
						set line 2 of lore of {_tsh3} to "&c- &r&fSharpness &8[&fT7&8]"
						set line 3 of lore of {_tsh3} to "&c- &r&f5 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh3}
					else:
						set {_tempsh3} to a wooden sword named "&fSharpness &8[&fT8&8]"
						set line 1 of lore of {_tempsh3} to "&7----------"
						set line 2 of lore of {_tempsh3} to "&f→ &4+5 Sharpness levels"
						set line 3 of lore of {_tempsh3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempsh3} to "&7----------"
						enchant {_tempsh3} with sharpness 8
						set slot loop-integer of event-inventory to {_tempsh3}
						if {shlevel::%player's uuid%} is less than 8:
							set line 5 of lore of {_tempsh3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempsh3}
						else:
							set line 5 of lore of {_tempsh3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempsh3}
				set {shskill::%player's uuid%::%loop-integer%} to slot loop-integer of event-inventory
				
on inventory click:
	if name of event-inventory is "&f&lSharpness Skill":
		cancel event
		if event-inventory is not player's inventory:
			if event-slot is 8:
				close player's inventory
				op the player
				make player execute command "/scythegui"
				deop the player
			if event-slot is 0:
				if {shlevel::%player's uuid%} = 0:
					if player's held item is any hoe:
						if {skillpoints::%player's uuid%} is greater than or equal to 1: # SHARPNESS 1 UPGRADE
							subtract 1 from {skillpoints::%player's uuid%}
							enchant player's tool with sharpness 5
							send "&a&lUpgrade Purchased!" to player
							add 1 to {shlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {faneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
							stop
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
							stop
					else:
						send "&c&lYou must be holding your scythe to upgrade a skill!" to player
						stop
				else if {shlevel::%player's uuid%} is greater than 0:
					send "&c&lYou have already upgraded this skill!" to player
					stop
					
			else if event-slot is 1:
				if {shlevel::%player's uuid%} = 1:
					if player's held item is any hoe:
						if {skillpoints::%player's uuid%} is greater than or equal to 3: # SECOND SHARPNESS UPGRADE
							subtract 3 from {skillpoints::%player's uuid%}
							enchant player's tool with sharpness 10
							send "&a&lUpgrade Purchased!" to player
							add 1 to {shlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
							stop
					else:
						send "&c&lYou must be holding your scythe to upgrade a skill!" to player
						stop
				else:
					send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
					stop
			else if event-slot is 2:
				if {shlevel::%player's uuid%} = 2:
					if player's held item is any hoe:
						if {amountofskills::%player's uuid%} is greater than or equal to 5:
							if {skillpoints::%player's uuid%} is greater than or equal to 4: # THIRD SHARPNESS UPGRADE
								subtract 4 from {skillpoints::%player's uuid%}
								enchant player's tool with sharpness 15
								send "&a&lUpgrade Purchased!" to player
								add 1 to {shlevel::%player's uuid%}
								add 1 to {amountofskills::%player's uuid%}
								set {crneedupdate::%player's uuid%} to true
								set {faneedupdate::%player's uuid%} to true
								set {xpneedupdate::%player's uuid%} to true
								set {msneedupdate::%player's uuid%} to true
								close player's inventory
								stop
							else:
								send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
								stop
						else:
							send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
							stop
					else:
						send "&c&lYou must be holding your scythe to upgrade a skill!" to player
						stop
				else:
					send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
					stop
					
		else if event-slot is 3:
			if {shlevel::%player's uuid%} = 3:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 5: # FOURTH SHARPNESS UPGRADE
							subtract 5 from {skillpoints::%player's uuid%}
							enchant player's tool with sharpness 20
							send "&a&lUpgrade Purchased!" to player
							add 1 to {shlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
							stop
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
							stop
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
						stop
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
					stop
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
				
		else if event-slot is 4:
			if {shlevel::%player's uuid%} = 4:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 6: # FIFTH SHARPNESS UPGRADE
							subtract 6 from {skillpoints::%player's uuid%}
							enchant player's tool with sharpness 25
							send "&a&lUpgrade Purchased!" to player
							add 1 to {shlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
							stop
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
							stop
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
						stop
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
					stop
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
				
		else if event-slot is 5:
			if {shlevel::%player's uuid%} = 5:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # SIXTH SHARPNESS UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							enchant player's tool with sharpness 30
							send "&a&lUpgrade Purchased!" to player
							add 1 to {shlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
							stop
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
							stop
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
						stop
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
					stop
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
				
		else if event-slot is 6:
			if {shlevel::%player's uuid%} = 6:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # SEVENTH SHARPNESS UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							enchant player's tool with sharpness 35
							send "&a&lUpgrade Purchased!" to player
							add 1 to {shlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
							stop
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
							stop
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
						stop
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
					stop
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
				
		else if event-slot is 7:
			if {shlevel::%player's uuid%} = 7:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # EIGTH SHARPNESS UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							enchant player's tool with sharpness 40
							send "&a&lUpgrade Purchased!" to player
							add 1 to {shlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
							stop
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
							stop
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
						stop
				else:
					send "&c&lYou must be holding your scythe to upgrade a skill!" to player
					stop
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop