function cropreapskill(p: player):
	if {crneedupdate::%{_p}'s uuid%} is true:
		open chest inventory with 1 row named "&d&lCrop Reap Skill" to {_p}
		wait 1 tick
		close {_p}'s inventory
		wait 1 tick
		open chest inventory with 1 row named "&d&lCrop Reap Skill" to {_p}
		loop integers between 0 and 9:
			set slot loop-value of {_p}'s current inventory to {crskill::%{_p}'s uuid%::%loop-integer%}
			set {crneedupdate::%{_p}'s uuid%} to false
	else:
		open chest inventory with 1 row named "&d&lCrop Reap Skill" to {_p}
		loop integers between 0 and 9:
			set slot loop-value of {_p}'s current inventory to {crskill::%{_p}'s uuid%::%loop-integer%}
			
command /crskill:
	permission: *
	trigger:
		cropreapskill(player)
		
on inventory close:
	if name of event-inventory is "&d&lCrop Reap Skill":
		if event-inventory is not player's inventory:
			loop integers between 0 and 9:
				if loop-integer = 0:
					if {shlevel::%player's uuid%} is less than 1:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&fSharpness &8[&fT1&8]"
						set slot loop-integer of event-inventory to {_tsh2}
					else:
						set {_tempkb} to wheat seeds named "&dCrop Reap &8[&dT1&8]"
						set line 1 of lore of {_tempkb} to "&7----------"
						set line 2 of lore of {_tempkb} to "&f→ &4+5%% of crops stolen on kill"
						set line 3 of lore of {_tempkb} to "&c&lCost: &a1 Skill Point"
						set line 4 of lore of {_tempkb} to "&7----------"
						enchant {_tempkb} with looting 1
						set slot loop-integer of event-inventory to {_tempkb}
						if {crlevel::%player's uuid%} is less than 1:
							set line 5 of lore of {_tempkb} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempkb}
						else:
							set line 5 of lore of {_tempkb} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempkb}
				if loop-integer = 1:
					if {crlevel::%player's uuid%} is less than 1: 
						set {_tkb2} to barrier named "&cLocked"
						set line 1 of lore of {_tkb2} to "&4&lRequirements:"
						set line 2 of lore of {_tkb2} to "&c- &r&dCrop Reap &8[&dT1&8]"
						set line 3 of lore of {_tkb2} to "&c- &r&d3 Learned Skills"
						set slot loop-integer of event-inventory to {_tkb2}
					else:
						set {_tempkb2} to wheat named "&dCrop Reap &8[&dT2&8]"
						set line 1 of lore of {_tempkb2} to "&7----------"
						set line 2 of lore of {_tempkb2} to "&f→ &4+5%% of crops stolen on kill" 
						set line 3 of lore of {_tempkb2} to "&c&lCost: &a3 Skill Points"
						set line 4 of lore of {_tempkb2} to "&7----------"
						enchant {_tempkb2} with looting 2
						set slot loop-integer of event-inventory to {_tempkb2}
						if {crlevel::%player's uuid%} is less than 2:
							set line 5 of lore of {_tempkb2} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempkb2}
						else:
							set line 5 of lore of {_tempkb2} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempkb2}
				if loop-integer = 2:
					if {crlevel::%player's uuid%} is less than 2:
						set {_tkb3} to barrier named "&cLocked"
						set line 1 of lore of {_tkb3} to "&4&lRequirements:"
						set line 2 of lore of {_tkb3} to "&c- &r&dCrop Reap &8[&dT2&8]"
						set line 3 of lore of {_tkb3} to "&c- &r&d5 Learned Skills"
						set slot loop-integer of event-inventory to {_tkb3}
					else:
						set {_tempkb3} to a hay block named "&dCrop Reap &8[&dT3&8]"
						set line 1 of lore of {_tempkb3} to "&7----------"
						set line 2 of lore of {_tempkb3} to "&f→ &4+5%% of crops stolen on kill"
						set line 3 of lore of {_tempkb3} to "&c&lCost: &a4 Skill Points"
						set line 4 of lore of {_tempkb3} to "&7----------"
						enchant {_tempkb3} with looting 3
						set slot loop-integer of event-inventory to {_tempkb3}
						if {crlevel::%player's uuid%} is less than 3:
							set line 5 of lore of {_tempkb3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempkb3}
						else:
							set line 5 of lore of {_tempkb3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempkb3}
				if loop-integer = 3:
					if {crlevel::%player's uuid%} is less than 3:
						set {_tkb3} to barrier named "&cLocked"
						set line 1 of lore of {_tkb3} to "&4&lRequirements:"
						set line 2 of lore of {_tkb3} to "&c- &r&dCrop Reap &8[&dT3&8]"
						set line 3 of lore of {_tkb3} to "&c- &r&d5 Learned Skills"
						set slot loop-integer of event-inventory to {_tkb3}
					else:
						set {_tempkb3} to a hay block named "&dCrop Reap &8[&dT4&8]"
						set line 1 of lore of {_tempkb3} to "&7----------"
						set line 2 of lore of {_tempkb3} to "&f→ &4+5%% of crops stolen on kill"
						set line 3 of lore of {_tempkb3} to "&c&lCost: &a5 Skill Points"
						set line 4 of lore of {_tempkb3} to "&7----------"
						enchant {_tempkb3} with looting 4
						set slot loop-integer of event-inventory to {_tempkb3}
						if {crlevel::%player's uuid%} is less than 4:
							set line 5 of lore of {_tempkb3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempkb3}
						else:
							set line 5 of lore of {_tempkb3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempkb3}
				if loop-integer = 4:
					if {crlevel::%player's uuid%} is less than 4:
						set {_tkb3} to barrier named "&cLocked"
						set line 1 of lore of {_tkb3} to "&4&lRequirements:"
						set line 2 of lore of {_tkb3} to "&c- &r&dCrop Reap &8[&dT4&8]"
						set line 3 of lore of {_tkb3} to "&c- &r&d5 Learned Skills"
						set slot loop-integer of event-inventory to {_tkb3}
					else:
						set {_tempkb3} to a hay block named "&dCrop Reap &8[&dT5&8]"
						set line 1 of lore of {_tempkb3} to "&7----------"
						set line 2 of lore of {_tempkb3} to "&f→ &4+5%% of crops stolen on kill"
						set line 3 of lore of {_tempkb3} to "&c&lCost: &a6 Skill Points"
						set line 4 of lore of {_tempkb3} to "&7----------"
						enchant {_tempkb3} with looting 5
						set slot loop-integer of event-inventory to {_tempkb3}
						if {crlevel::%player's uuid%} is less than 5:
							set line 5 of lore of {_tempkb3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempkb3}
						else:
							set line 5 of lore of {_tempkb3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempkb3}
				if loop-integer = 5:
					if {crlevel::%player's uuid%} is less than 5:
						set {_tkb3} to barrier named "&cLocked"
						set line 1 of lore of {_tkb3} to "&4&lRequirements:"
						set line 2 of lore of {_tkb3} to "&c- &r&dCrop Reap &8[&dT5&8]"
						set line 3 of lore of {_tkb3} to "&c- &r&d5 Learned Skills"
						set slot loop-integer of event-inventory to {_tkb3}
					else:
						set {_tempkb3} to a hay block named "&dCrop Reap &8[&dT6&8]"
						set line 1 of lore of {_tempkb3} to "&7----------"
						set line 2 of lore of {_tempkb3} to "&f→ &4+5%% of crops stolen on kill"
						set line 3 of lore of {_tempkb3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempkb3} to "&7----------"
						enchant {_tempkb3} with looting 6
						set slot loop-integer of event-inventory to {_tempkb3}
						if {crlevel::%player's uuid%} is less than 6:
							set line 5 of lore of {_tempkb3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempkb3}
						else:
							set line 5 of lore of {_tempkb3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempkb3}
				if loop-integer = 6:
					if {crlevel::%player's uuid%} is less than 6:
						set {_tkb3} to barrier named "&cLocked"
						set line 1 of lore of {_tkb3} to "&4&lRequirements:"
						set line 2 of lore of {_tkb3} to "&c- &r&dCrop Reap &8[&dT6&8]"
						set line 3 of lore of {_tkb3} to "&c- &r&d5 Learned Skills"
						set slot loop-integer of event-inventory to {_tkb3}
					else:
						set {_tempkb3} to a hay block named "&dCrop Reap &8[&dT7&8]"
						set line 1 of lore of {_tempkb3} to "&7----------"
						set line 2 of lore of {_tempkb3} to "&f→ &4+5%% of crops stolen on kill"
						set line 3 of lore of {_tempkb3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempkb3} to "&7----------"
						enchant {_tempkb3} with looting 7
						set slot loop-integer of event-inventory to {_tempkb3}
						if {crlevel::%player's uuid%} is less than 7:
							set line 5 of lore of {_tempkb3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempkb3}
						else:
							set line 5 of lore of {_tempkb3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempkb3}
				if loop-integer = 7:
					if {crlevel::%player's uuid%} is less than 7:
						set {_tkb3} to barrier named "&cLocked"
						set line 1 of lore of {_tkb3} to "&4&lRequirements:"
						set line 2 of lore of {_tkb3} to "&c- &r&dCrop Reap &8[&dT7&8]"
						set line 3 of lore of {_tkb3} to "&c- &r&d5 Learned Skills"
						set slot loop-integer of event-inventory to {_tkb3}
					else:
						set {_tempkb3} to a hay block named "&dCrop Reap &8[&dT8&8]"
						set line 1 of lore of {_tempkb3} to "&7----------"
						set line 2 of lore of {_tempkb3} to "&f→ &4+5%% of crops stolen on kill"
						set line 3 of lore of {_tempkb3} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempkb3} to "&7----------"
						enchant {_tempkb3} with looting 8
						set slot loop-integer of event-inventory to {_tempkb3}
						if {crlevel::%player's uuid%} is less than 8:
							set line 5 of lore of {_tempkb3} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempkb3}
						else:
							set line 5 of lore of {_tempkb3} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempkb3}
				if loop-integer = 8:
					set slot loop-integer of event-inventory to a nether star named "&cBack to &3&nSkill Tree"
				set {crskill::%player's uuid%::%loop-integer%} to slot loop-integer of event-inventory
				
on inventory click:
	if name of event-inventory is "&d&lCrop Reap Skill":
		if event-clicktype is number key:
			cancel event
		cancel event
		event-inventory is not player's inventory
		if event-slot is 8:
			close player's inventory
			op the player
			make player execute command "/scythegui"
			deop the player
		else if event-slot is 0:
			if:
				{crlevel::%player's uuid%} = 0
				{shlevel::%player's uuid%} is greater than 0
			then:
				if player's held item is any hoe:
					if {skillpoints::%player's uuid%} is greater than or equal to 1: # FIRST CROPREAP UPGRADE
						subtract 1 from {skillpoints::%player's uuid%}
						set {cropreapskill::%player's uuid%} to true
						add 0.05 to {cropreapamount::%player's uuid%}
						send "&a&lUpgrade Purchased!" to player
						add 1 to {crlevel::%player's uuid%}
						add 1 to {amountofskills::%player's uuid%}
						set {faneedupdate::%player's uuid%} to true
						set {shneedupdate::%player's uuid%} to true
						set {xpneedupdate::%player's uuid%} to true
						set {msneedupdate::%player's uuid%} to true
						close player's inventory
					else:
						send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 1:
			if {crlevel::%player's uuid%} = 1:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 3:
						if {skillpoints::%player's uuid%} is greater than or equal to 3: # CROPREAP 2 UPGRADE
							subtract 3 from {skillpoints::%player's uuid%}
							add 0.05 to {cropreapamount::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							add 1 to {crlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {faneedupdate::%player's uuid%} to true
							set {shneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 2:
			if {crlevel::%player's uuid%} = 2:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 4: # CROPREAP 3 UPGRADE
							subtract 4 from {skillpoints::%player's uuid%}
							add 0.05 to {cropreapamount::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							add 1 to {crlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {faneedupdate::%player's uuid%} to true
							set {shneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 3:
			if {crlevel::%player's uuid%} = 3:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 5: # CROPREAP 4 UPGRADE
							subtract 5 from {skillpoints::%player's uuid%}
							add 0.05 to {cropreapamount::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							add 1 to {crlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {faneedupdate::%player's uuid%} to true
							set {shneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 4:
			if {crlevel::%player's uuid%} = 4:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 6: # CROPREAP 5 UPGRADE
							subtract 6 from {skillpoints::%player's uuid%}
							add 0.05 to {cropreapamount::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							add 1 to {crlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {faneedupdate::%player's uuid%} to true
							set {shneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 5:
			if {crlevel::%player's uuid%} = 5:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # CROPREAP 6 UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							add 0.05 to {cropreapamount::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							add 1 to {crlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {faneedupdate::%player's uuid%} to true
							set {shneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 6:
			if {crlevel::%player's uuid%} = 6:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # CROPREAP 7 UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							add 0.05 to {cropreapamount::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							add 1 to {crlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {faneedupdate::%player's uuid%} to true
							set {shneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 7:
			if {crlevel::%player's uuid%} = 7:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # CROPREAP 8 UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							add 0.05 to {cropreapamount::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							add 1 to {crlevel::%player's uuid%}
							add 1 to {amountofskills::%player's uuid%}
							set {faneedupdate::%player's uuid%} to true
							set {shneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							set {msneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop