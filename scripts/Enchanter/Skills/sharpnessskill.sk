function loadSharpnessEnchantGUI(p: player):
	set {_gui} to chest inventory with 3 rows named "&4&lSharpness Enchant &8| Page 1"
	
	loop 27 times:
		set {_slot} to loop-number - 1
		set slot {_slot} of {_gui} to red stained glass pane named " "

	set slot 10 of {_gui} to {_p}'s tool
	set slot 22 of {_gui} to barrier named "&8[&4&lClose&8]"
	set slot 26 of {_gui} to nether star named "&8[&a&lNext&8]"

	loop integers from 12 to 16:
		set {_slot} to loop-number

		if {sharpness::%loop-integer - 11%::unlocked::%uuid of {_p}%} is equal to true:

			if {sharpness::%loop-integer - 10%::unlocked::%uuid of {_p}%} is equal to true:
				set {_item} to redstone named "&4&lSharpness &8[&4&l%romanNumeralConversion(loop-integer - 11)%&8] | [&a&lUnlocked&8]"
				make {_item} glint
			else:
				set {_item} to redstone named "&4&lSharpness &8[&4&l%romanNumeralConversion(loop-integer - 11)%&8]"
				
			loop values "Sharpness %loop-integer - 11%" of {enchants-Json}: 
				add json-value to {_lore::*}
				
			add "&ePrice:" to {_lore::*}
			add "&e&lEnchant Points &8[&e&l%{sharpness::%loop-integer - 11%::price}%&8]" to {_lore::*}

			delete {_lore::1}
			set lore of {_item} to colored {_lore::*}
			delete {_lore::*}
								
			set slot {_slot} of {_gui} to {_item}

	open {_gui} to {_p}

function loadSharpnessEnchantGUI2(p: player):
	set {_gui} to chest inventory with 3 rows named "&4&lSharpness Enchant &8| Page 2"
		
	loop 27 times:
		set {_slot} to loop-number - 1
		set slot {_slot} of {_gui} to red stained glass pane named " "
	
	set slot 10 of {_gui} to {_p}'s tool
	set slot 22 of {_gui} to barrier named "&8[&4&lClose&8]"
	set slot 18 of {_gui} to nether star named "&8[&a&lBack&8]"
	
	loop integers from 12 to 16:
		set {_slot} to loop-number
	
		if {sharpness::%loop-integer - 6%::unlocked::%uuid of {_p}%} is equal to true:
	
			if {sharpness::%loop-integer - 5%::unlocked::%uuid of {_p}%} is equal to true:
				set {_item} to redstone named "&4&lSharpness &8[&4&l%romanNumeralConversion(loop-integer - 6)%&8] | [&a&lUnlocked&8]"
				make {_item} glint
			else:
				set {_item} to redstone named "&4&lSharpness &8[&4&l%romanNumeralConversion(loop-integer - 6)%&8]"
					
			loop values "Sharpness %loop-integer - 6%" of {enchants-Json}: 
				add json-value to {_lore::*}
					
			add "&ePrice:" to {_lore::*}
			add "&e&lEnchant Points &8[&e&l%{sharpness::%loop-integer - 6%::price}%&8]" to {_lore::*}
	
			delete {_lore::1}
			set lore of {_item} to colored {_lore::*}
			delete {_lore::*}
									
			set slot {_slot} of {_gui} to {_item}
	
	open {_gui} to {_p}

on inventory click:
	if event-inventory's name contains "&4&lSharpness Enchant &8| Page 1":
		cancel event
		
		if event-slot is 22:
			close player's inventory
		if event-slot is 26:
			close player's inventory
			loadSharpnessEnchantGUI2(player)

		set {_eventslots::*} to 1, 2, 3, 4, and 5
		set {_event-slot} to index of event-slot - 11

		if {_eventslots::*} contain {_event-slot}:
			if {sharpness::%{_event-slot} + 1%::unlocked::%player's uuid%} is equal to false:
				if {sharpness::%{_event-slot}%::unlocked::%player's uuid%} is equal to true:
					if {enchantpoints::%player's uuid%} >= {sharpness::%{_event-slot}%::price}:
						remove {sharpness::%{_event-slot}%::price} from {enchantpoints::%player's uuid%}
						set {sharpness::%{_event-slot} + 1%::unlocked::%player's uuid%} to true
						add "0:%{_event-slot}%" to string list tag "Croplite:enchants" of custom nbt of player's tool
						addEnchantLore(player)
						loadSharpnessEnchantGUI(player)
						send "&8[&d&lCroplite&8] &aYour scythe has been enchanted with &4&lSharpness &8[&4&l%romanNumeralConversion({_event-slot})%&8] &afor &e&lEnchant Points &8[&r&e&l%{sharpness::%{_event-slot}%::price}%&r&8]" to player
					else:
						send "&8[&d&lCroplite&8] &cYou don't have enough &e&lEnchant Points &cto purchase this enchant" to player
			else:
				send "&8[&d&lCroplite&8] &cYou have already purchased this enchant" to player

	if event-inventory's name contains "&4&lSharpness Enchant &8| Page 2":
		cancel event
		if event-slot is 22:
			close player's inventory
		if event-slot is 18:
			close player's inventory
			loadSharpnessEnchantGUI(player)

		set {_eventslots::*} to 6, 7, 8, 9, and 10
		set {_event-slot} to index of event-slot - 6

		if {_eventslots::*} contains {_event-slot}:
			if {sharpness::%{_event-slot} + 1%::unlocked::%player's uuid%} is equal to false:
				if {sharpness::%{_event-slot}%::unlocked::%player's uuid%} is equal to true:
					if {enchantpoints::%player's uuid%} >= {sharpness::%{_event-slot}%::price}:
						remove {sharpness::%{_event-slot}%::price} from {enchantpoints::%player's uuid%}
						set {sharpness::%{_event-slot} + 1%::unlocked::%player's uuid%} to true
						add "0:%{_event-slot}%" to string list tag "Croplite:enchants" of custom nbt of player's tool
						addEnchantLore(player)
						loadSharpnessEnchantGUI2(player)
						send "&8[&d&lCroplite&8] &aYour scythe has been enchanted with &4&lSharpness &8[&4&l%romanNumeralConversion({_event-slot})%&8] &afor &e&lEnchant Points &8[&r&e&l%{sharpness::%{_event-slot}%::price}%&r&8]" to player
					else:
						send "&8[&d&lCroplite&8] &cYou don't have enough &e&lEnchant Points &cto unlock this enchant" to player
			else:
				send "&8[&d&lCroplite&8] &cYou have already purchased this enchant" to player

function romanNumeralConversion(number: number) :: text:
	return value "%{_number}%" of {romanNumeral-Json}

command /getnbt:
	trigger:
		set {_nbt} to nbt of player's held item
		broadcast "%{_nbt}%"

command /resetsharpness:
	trigger:
		set {sharpness::1::unlocked::%player's uuid%} to true
		set {sharpness::2::unlocked::%player's uuid%} to false
		set {sharpness::3::unlocked::%player's uuid%} to false
		set {sharpness::4::unlocked::%player's uuid%} to false
		set {sharpness::5::unlocked::%player's uuid%} to false
		set {sharpness::6::unlocked::%player's uuid%} to false
		set {sharpness::7::unlocked::%player's uuid%} to false
		set {sharpness::8::unlocked::%player's uuid%} to false
		set {sharpness::9::unlocked::%player's uuid%} to false
		set {sharpness::10::unlocked::%player's uuid%} to false
		set {sharpness::11::unlocked::%player's uuid%} to false