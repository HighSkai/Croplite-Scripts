command /open-enchantergui:
	permission: operator
	trigger:
		play sound "minecraft:ui.button.click" to player
		loadEnchanterGui(player)

function loadEnchanterGui(p: player):
	set {_gui} to chest inventory with 5 rows named "&5&lEnchants &8| &eEnchant Points &8[&r&e&l%{enchant-points::%uuid of {_p}%}%&r&8]"
	
	loop 54 times:
		set {_item} to purple stained glass pane
		hide {_item}'s tooltip
		set slot (loop-number - 1) of {_gui} to {_item}

	set slot 32 of {_gui} to book named "&4&lComing Soon..."
	set slot 33 of {_gui} to book named "&4&lComing Soon..."
	set slot 34 of {_gui} to book named "&4&lComing Soon..."

	set {_item} to enchanted book named "&4&lSharpness"
	set line 1 of lore of {_item} to "&7Increases attack damage"
	set slot 14 of {_gui} to {_item}

	set {_item} to enchanted book named "&6&lFire Aspect"
	set line 1 of lore of {_item} to "&7Ignites attacked farmers"
	set line 2 of lore of {_item} to "&7and crop mobs"
	set slot 15 of {_gui} to {_item}

	set {_item} to enchanted book named "&e&lExp Multi"
	set line 1 of lore of {_item} to "&7Increases experience gained"
	set line 2 of lore of {_item} to "&7from farming and killing mobs"
	set slot 16 of {_gui} to {_item}

	set {_item} to enchanted book named "&b&lCrop Multi"
	set line 1 of lore of {_item} to "&7Increases crops earned"
	set line 2 of lore of {_item} to "&7from farming"
	set slot 23 of {_gui} to {_item}
	
	set {_item} to enchanted book named "&8&lCrop Reap"
	set line 1 of lore of {_item} to "&7Reaps crops from killed"
	set line 2 of lore of {_item} to "&7farmers"
	set slot 24 of {_gui} to {_item}

	set {_item} to enchanted book named "&2&lMob Spawn"
	set line 1 of lore of {_item} to "&7Increases the chance of"
	set line 2 of lore of {_item} to "&7spawning a crop mob"
	set line 3 of lore of {_item} to "&7from farming"
	set slot 25 of {_gui} to {_item}
	
	set slot 20 of {_gui} to slot 0 of {_p}
		
	set slot 40 of {_gui} to barrier named "&8[&4&lClose&8]"

	open {_gui} to {_p}

on inventory click:
	if event-inventory is not player's inventory:
		if event-inventory's name contains "&5&lEnchants &8|":
			cancel event

			if event-slot is 14:
				play sound "minecraft:ui.button.click" to player
				loadSharpnessEnchantGUI(player)
			else if event-slot is 15:
				play sound "minecraft:ui.button.click" to player
				loadFireAspectEnchantGUI(player)
			else if event-slot is 16:
				play sound "minecraft:ui.button.click" to player
				loadExperienceEnchantGUI(player)
			else if event-slot is 23:
				play sound "minecraft:ui.button.click" to player
				loadCropMultiEnchantGUI(player)
			else if event-slot is 24:
				play sound "minecraft:ui.button.click" to player
				loadCropReapEnchantGUI(player)
			else if event-slot is 25:
				play sound "minecraft:ui.button.click" to player
				loadMobSpawnEnchantGUI(player)

			else if event-slot is 32 or 33 or 34:
				play sound "minecraft:entity.villager.no" to player
				send "&d&lElliott &cComing soon."

			else if event-slot is 40:
				play sound "minecraft:ui.button.click" to player
				close player's inventory

function addEnchantLore(p: player):
	set {_item} to slot 0 of {_p}
	set {_tags::*} to string list tag "Croplite:enchants" of custom nbt of slot 0 of {_p}
	if {_tags::*} is set:
		make {_item} glint

	set {_highestSharpnessLevel} to 0
	set {_highestFireAspectLevel} to 0
	set {_highestExperienceLevel} to 0
	set {_highestCropMultiLevel} to 0
	set {_highestCropReapLevel} to 0
	set {_highestMobSpawnLevel} to 0

	loop {_tags::*}:
		set {_parts::*} to loop-value split at ":"
		set {_enchantID} to {_parts::1}

		if {_enchantID} is "sharpness":
			set {_sharpnessLevel} to {_parts::2} parsed as number
			if {_sharpnessLevel} > {_highestSharpnessLevel}:
				set {_highestSharpnessLevel} to {_sharpnessLevel} 

		if {_enchantID} is "fireaspect":
			set {_fireAspectLevel} to {_parts::2} parsed as number
			if {_fireAspectLevel} > {_highestFireAspectLevel}:
				set {_highestFireAspectLevel} to {_fireAspectLevel}

		if {_enchantID} is "experience":
			set {_experienceLevel} to {_parts::2} parsed as number
			if {_experienceLevel} > {_highestExperienceLevel}:
				set {_highestExperienceLevel} to {_experienceLevel}

		if {_enchantID} is "cropmulti":
			set {_cropMultiLevel} to {_parts::2} parsed as number
			if {_cropMultiLevel} > {_highestCropMultiLevel}:
				set {_highestCropMultiLevel} to {_cropMultiLevel}

		if {_enchantID} is "cropreap":
			set {_cropReapLevel} to {_parts::2} parsed as number
			if {_cropReapLevel} > {_highestCropReapLevel}:
				set {_highestCropReapLevel} to {_cropReapLevel}

		if {_enchantID} is "mobspawn":
			set {_mobSpawnLevel} to {_parts::2} parsed as number
			if {_mobSpawnLevel} > {_highestMobSpawnLevel}:
				set {_highestMobSpawnLevel} to {_mobSpawnLevel}

	set {_size} to size of {_tags::*}
	set {_i} to {_size}
	while {_i} > 0:
		set {_entry} to {_tags::%{_i}%}
		set {_parts::*} to {_entry} split at ":"
		if {_parts::1} is "sharpness":
			set {_sharpnessLevel} to {_parts::2} parsed as number
			if {_sharpnessLevel} < {_highestSharpnessLevel}:
				remove "sharpness:%{_sharpnessLevel}%" from string list tag "Croplite:enchants" of custom nbt of {_item}

		if {_parts::1} is "fireaspect":
			set {_fireAspectLevel} to {_parts::2} parsed as number
			if {_fireAspectLevel} < {_highestFireAspectLevel}:
				remove "fireaspect:%{_fireAspectLevel}%" from string list tag "Croplite:enchants" of custom nbt of {_item}

		if {_parts::1} is "experience":
			set {_experienceLevel} to {_parts::2} parsed as number
			if {_experienceLevel} < {_highestExperienceLevel}:
				remove "experience:%{_experienceLevel}%" from string list tag "Croplite:enchants" of custom nbt of {_item}

		if {_parts::1} is "cropmulti":
			set {_cropMultiLevel} to {_parts::2} parsed as number
			if {_cropMultiLevel} < {_highestCropMultiLevel}:
				remove "cropmulti:%{_cropMultiLevel}%" from string list tag "Croplite:enchants" of custom nbt of {_item}

		if {_parts::1} is "cropreap":
			set {_cropReapLevel} to {_parts::2} parsed as number
			if {_cropReapLevel} < {_highestCropReapLevel}:
				remove "cropreap:%{_cropReapLevel}%" from string list tag "Croplite:enchants" of custom nbt of {_item}

		if {_parts::1} is "mobspawn":
			set {_mobSpawnLevel} to {_parts::2} parsed as number
			if {_mobSpawnLevel} < {_highestMobSpawnLevel}:
				remove "cropreap:%{_mobSpawnLevel}%" from string list tag "Croplite:enchants" of custom nbt of {_item}

		remove 1 from {_i}

	set {_lore::*} to lore of {_item}
	set {_size} to size of {_lore::*}
	set {_rarity} to {_lore::%{_size}%}

	set {_newlore::*} to "&7---------------"
	loop integers from 2 to {_size}:
		if {_lore::%loop-integer%} is not equal to "&7---------------":
			add {_lore::%loop-integer%} to {_newlore::*}
		else:
			stop 1 loop
	add "&7---------------" to {_newlore::*}

	loop values "Sharpness %{_highestSharpnessLevel}%" of {enchants-Json}:
		add loop-value to {_newlore::*}

	loop values "Fire Aspect %{_highestFireAspectLevel}%" of {enchants-Json}:
		add loop-value to {_newlore::*}

	loop values "Experience %{_highestExperienceLevel}%" of {enchants-Json}:
		add loop-value to {_newlore::*}	

	loop values "Crop Multi %{_highestCropMultiLevel}%" of {enchants-Json}:
		add loop-value to {_newlore::*}

	loop values "Crop Reap %{_highestCropReapLevel}%" of {enchants-Json}:
		add loop-value to {_newlore::*}

	loop values "Mob Spawn %{_highestMobSpawnLevel}%" of {enchants-Json}:
		add loop-value to {_newlore::*}
	
	add {_rarity} to {_newlore::*}
	set lore of {_item} to colored {_newlore::*}
	set slot 0 of {_p} to {_item}

function setEnchantPrices():
	setSharpnessEnchantPrices()
	setFireAspectEnchantPrices()
	setExperienceEnchantPrices()
	setCropMultiEnchantPrices()
	setCropReapEnchantPrices()
	setMobSpawnEnchantPrices()

function resetEnchants(p: player):
	resetSharpnessEnchant({_p})
	resetFireAspectEnchant({_p})
	resetExperienceEnchant({_p})
	resetCropMultiEnchant({_p})
	resetCropReapEnchant({_p})
	resetMobSpawnEnchant({_p})

function romanNumeralConversion(number: number) :: text:
	return value "%{_number}%" of {romanNumeral-Json}

command /getnbt:
	permission: operator
	trigger:
		set {_nbt} to nbt of player's held item
		broadcast "==============================="
		broadcast "%{_nbt}%"
		broadcast "==============================="