on damage:
    if damage was caused by lava, fire or burning:
        set damage to 1
        if victim is an armor stand:
            spawnDamageDisplay(last attacker of victim, victim, damage)
            cancel event
        else:
            spawnDamageDisplay(last attacker of victim, victim, damage)
    else:
        if attack cooldown of attacker >= 0.5:
            if attacker's tool is tagged as item tag "minecraft:hoes":
                set {_scytheenchants::*} to string list tag "Croplite:enchants" of custom nbt of attacker's tool
                set {_scythestats::*} to string list tag "Croplite:scythe-stats" of custom nbt of attacker's tool

                loop {_scythestats::*}:
                    set {_parts::*} to loop-value split at ":"
                    set {_id} to {_parts::1}

                    if {_id} is "damage":
                        set {_damage} to {_parts::2} parsed as number

                add {damage-addition::%attacker's uuid%} to {_damage}
                
                loop {_scytheenchants::*}:
                    set {_parts::*} to loop-value split at ":"
                    set {_id} to {_parts::1}
            
                    if {_id} is "sharpness":
                        add {_parts::2} parsed as number to {_damage}
                
                    if {_id} is "fireaspect":
                        set {_time} to timespan({_parts::2} parsed as number, seconds)
                        add 1 seconds to {_time}
                        if victim is not a player:
                            ignite victim for {_time}
                        else:
                            if {pvpstatus::%victim's uuid%} is true:
                                ignite victim for {_time} 

                set {_damage} to {_damage} - armorEnchantDamage(victim)

                if hit is not critical:
                    set {_damage} to {_damage} / 2

                if {_damage} is less than 0.5:
                    set damage to 0.5
                else:
                    set damage to {_damage}

                #hoe
                if victim is a player:
                    if ({pvpstatus::%victim's uuid%} and {pvpstatus::%attacker's uuid%} is true):
                        spawnDamageDisplay(attacker, victim, damage)
                else:
                    spawnDamageDisplay(attacker, victim, damage)
            else:
                #not hoe
                if victim is a player:
                    if ({pvpstatus::%victim's uuid%} and {pvpstatus::%attacker's uuid%} is true):
                        set damage to 0.5
                        spawnDamageDisplay(attacker, victim, damage)
                else:
                    set damage to 0.5
                    spawnDamageDisplay(attacker, victim, damage)
        else:
            send action bar "&8[&4&l%attack cooldown of attacker% &8/ &4&l1&8]" to attacker
        
local function spawnDamageDisplay(attacker: entity, victim: entity, damage: number):
    set {_attacker-to-victim} to vector between {_victim} and {_attacker}
    set standard length of {_attacker-to-victim} to 0.5

    set y component of {_attacker-to-victim} to a random number between -0.5 and 0.1

    if the facing of {_attacker} is north:
        set x component of {_attacker-to-victim} to a random number between -0.7 and 0.7
    else if the facing of {_attacker} is south:
        set x component of {_attacker-to-victim} to a random number between -0.7 and 0.7
    else if the facing of {_attacker} is east:
        set z component of {_attacker-to-victim} to a random number between -0.7 and 0.7
    else if the facing of {_attacker} is west:
        set z component of {_attacker-to-victim} to a random number between -0.7 and 0.7

    summon text display at {_victim}'s head offset by {_attacker-to-victim}
    set {_damageDisplay} to last spawned entity

    set display text of {_damageDisplay} to "&8[&4&l%{_damage}%&8]"
    apply drop shadow to {_damageDisplay}

    set display billboard of {_damageDisplay} to center
    set display text background color of {_damageDisplay} to bukkitColor(40,0,0,0)

    wait 0.5 seconds
    kill {_damageDisplay}

local function armorEnchantDamage(victim: entity) ::number: 
    if helmet of {_victim} is not air:
        set {_helmet-tags::*} to string list tag "Croplite:enchants" of custom nbt of {_victim}'s helmet
    if chestplate of {_victim} is not air:
        set {_chestplate-tags::*} to string list tag "Croplite:enchants" of custom nbt of {_victim}'s chestplate
    if leggings of {_victim} is not air:
        set {_leggings-tags::*} to string list tag "Croplite:enchants" of custom nbt of {_victim}'s leggings
    if boots of {_victim} is not air:
        set {_boots-tags::*} to string list tag "Croplite:enchants" of custom nbt of {_victim}'s boots

    set {_helmet-defense} to 0
    set {_chestplate-defense} to 0
    set {_leggings-defense} to 0
    set {_boots-defense} to 0

    if {_helmet-tags::*} is set:
        loop {_helmet-tags::*}:
            set {_parts::*} to loop-value split at ":"
            set {_id} to {_parts::1}
        if {_id} is "prot":
            set {_helmet-defense} to {_parts::2} parsed as number

    if {_chestplate-tags::*} is set:      
        loop {_chestplate-tags::*}:
            set {_parts::*} to loop-value split at ":"
            set {_id} to {_parts::1}
        if {_id} is "prot":
            set {_chestplate-defense} to {_parts::2} parsed as number

    if {_leggings-tags::*} is set:
        loop {_leggings-tags::*}:
            set {_parts::*} to loop-value split at ":"
            set {_id} to {_parts::1}
        if {_id} is "prot":
            set {_leggings-defense} to {_parts::2} parsed as number

    if {_boots-tags::*} is set:
        loop {_boots-tags::*}:
            set {_parts::*} to loop-value split at ":"
            set {_id} to {_parts::1}
        if {_id} is "prot":
            set {_boots-defense} to {_parts::2} parsed as number

    return {_helmet-defense} + {_chestplate-defense} + {_leggings-defense} + {_boots-defense}

command /spawnattackdummy:
    permission: operator
    trigger:
        spawn a armor stand at the player
        set {_stand} to last spawned entity
        set name of {_stand} to "attack_dummy"
        summon text display 2 block above {_stand}
        set {_name-display} to last spawned entity
        set name of {name-display} to "attack_dummy-name"

        set display text of {_name-display} to "&4&lAttack Dummy"
        apply drop shadow to {_name-display}
    
        set display billboard of {_name-display} to center
        set display text background color of {_name-display} to bukkitColor(40,0,0,0)

on entity move:
    if name of event-entity is "attack_dummy":
        cancel event

on death:
    if name of victim is "attack_dummy":
        if attacker is a player:
            cancel event

command /killattackdummies:
    trigger:
        loop all entities:
            if name of loop-entity is "attack_dummy":
                kill loop-entity
            else if name of loop-entity is "Text Display":
                kill loop-entity