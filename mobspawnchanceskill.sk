function mobspawnskill(p: player):
	if {msneedupdate::%{_p}'s uuid%} is true:
		open chest inventory with 1 row named "&9&lMob Spawn Skill" to {_p}
		wait 1 tick
		close {_p}'s inventory
		wait 1 tick
		open chest inventory with 1 row named "&9&lMob Spawn Skill" to {_p}
		loop integers between 0 and 9:
			set slot loop-value of {_p}'s current inventory to {msskill::%{_p}'s uuid%::%loop-integer%}
			set {msneedupdate::%{_p}'s uuid%} to false
	else:
		open chest inventory with 1 row named "&9&lMob Spawn Skill" to {_p}
		loop integers between 0 and 9:
			set slot loop-value of {_p}'s current inventory to {msskill::%{_p}'s uuid%::%loop-integer%}
			
command /msskill:
	permission: *
	trigger:
		mobspawnskill(player)
on inventory close:
	if name of event-inventory is "&9&lMob Spawn Skill":
		if event-inventory is not player's inventory:
			loop integers between 0 and 9:
				if loop-integer = 0:
					if {su1::%player's uuid%} = false:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&fSharpness &8[&fT1&8]"
						set slot loop-integer of event-inventory to {_tsh2}
					else if {su1::%player's uuid%} is true:
						set {_tempup} to a stone hoe named "&9Crop Mob Spawn Chance &8[&9T1&8]"
						set line 1 of lore of {_tempup} to "&7----------"
						set line 2 of lore of {_tempup} to "&f→ &4+0.5%% chance to spawn a mob on harvest"
						set line 3 of lore of {_tempup} to "&c&lCost: &a1 Skill Point"
						set line 4 of lore of {_tempup} to "&7----------"
						enchant {_tempup} with luck of the sea 1
						set slot loop-integer of event-inventory to {_tempup}
						if {su7::%player's uuid%} = false:
							set line 5 of lore of {_tempup} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempup}
						else:
							set line 5 of lore of {_tempup} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempup}
				if loop-integer = 1:
					if {su7::%player's uuid%} = false:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&9Crop Mob Spawn &8[&9T1&8]"
						set line 3 of lore of {_tsh2} to "&c- &r&93 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh2}
					else if {su7::%player's uuid%} is true:
						set {_tempup} to a stone hoe named "&9Crop Mob Spawn &8[&9T2&8]"
						set line 1 of lore of {_tempup} to "&7----------"
						set line 2 of lore of {_tempup} to "&f→ &4+0.5%% chance to spawn a mob on harvest"
						set line 3 of lore of {_tempup} to "&c&lCost: &a3 Skill Points"
						set line 4 of lore of {_tempup} to "&7----------"
						enchant {_tempup} with luck of the sea 2
						set slot loop-integer of event-inventory to {_tempup}
						if {su14::%player's uuid%} = false:
							set line 5 of lore of {_tempup} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempup}
						else:
							set line 5 of lore of {_tempup} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempup}
				if loop-integer = 2:
					if {su14::%player's uuid%} = false:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&9Crop Mob Spawn &8[&9T2&8]"
						set line 3 of lore of {_tsh2} to "&c- &r&95 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh2}
					else if {su14::%player's uuid%} is true:
						set {_tempup} to a stone hoe named "&9Crop Mob Spawn &8[&9T3&8]"
						set line 1 of lore of {_tempup} to "&7----------"
						set line 2 of lore of {_tempup} to "&f→ &4+0.5%% chance to spawn a mob on harvest"
						set line 3 of lore of {_tempup} to "&c&lCost: &a4 Skill Points"
						set line 4 of lore of {_tempup} to "&7----------"
						enchant {_tempup} with luck of the sea 3
						set slot loop-integer of event-inventory to {_tempup}
						if {su15::%player's uuid%} = false:
							set line 5 of lore of {_tempup} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempup}
						else:
							set line 5 of lore of {_tempup} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempup}
				if loop-integer = 3:
					if {su15::%player's uuid%} = false:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&9Crop Mob Spawn &8[&9T3&8]"
						set line 3 of lore of {_tsh2} to "&c- &r&95 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh2}
					else if {su15::%player's uuid%} is true:
						set {_tempup} to a stone hoe named "&9Crop Mob Spawn &8[&9T4&8]"
						set line 1 of lore of {_tempup} to "&7----------"
						set line 2 of lore of {_tempup} to "&f→ &4+0.5%% chance to spawn a mob on harvest"
						set line 3 of lore of {_tempup} to "&c&lCost: &a5 Skill Points"
						set line 4 of lore of {_tempup} to "&7----------"
						enchant {_tempup} with luck of the sea 4
						set slot loop-integer of event-inventory to {_tempup}
						if {su21::%player's uuid%} = false:
							set line 5 of lore of {_tempup} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempup}
						else:
							set line 5 of lore of {_tempup} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempup}
				if loop-integer = 4:
					if {su21::%player's uuid%} = false:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&9Crop Mob Spawn &8[&9T4&8]"
						set line 3 of lore of {_tsh2} to "&c- &r&95 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh2}
					else if {su21::%player's uuid%} is true:
						set {_tempup} to a stone hoe named "&9Crop Mob Spawn &8[&9T5&8]"
						set line 1 of lore of {_tempup} to "&7----------"
						set line 2 of lore of {_tempup} to "&f→ &4+0.5%% chance to spawn a mob on harvest"
						set line 3 of lore of {_tempup} to "&c&lCost: &a6 Skill Points"
						set line 4 of lore of {_tempup} to "&7----------"
						enchant {_tempup} with luck of the sea 5
						set slot loop-integer of event-inventory to {_tempup}
						if {su22::%player's uuid%} = false:
							set line 5 of lore of {_tempup} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempup}
						else:
							set line 5 of lore of {_tempup} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempup}
				if loop-integer = 5:
					if {su22::%player's uuid%} = false:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&9Crop Mob Spawn &8[&9T5&8]"
						set line 3 of lore of {_tsh2} to "&c- &r&95 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh2}
					else if {su22::%player's uuid%} is true:
						set {_tempup} to a stone hoe named "&9Crop Mob Spawn &8[&9T6&8]"
						set line 1 of lore of {_tempup} to "&7----------"
						set line 2 of lore of {_tempup} to "&f→ &4+0.5%% chance to spawn a mob on harvest"
						set line 3 of lore of {_tempup} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempup} to "&7----------"
						enchant {_tempup} with luck of the sea 6
						set slot loop-integer of event-inventory to {_tempup}
						if {su23::%player's uuid%} = false:
							set line 5 of lore of {_tempup} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempup}
						else:
							set line 5 of lore of {_tempup} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempup}
				if loop-integer = 6:
					if {su23::%player's uuid%} = false:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&9Crop Mob Spawn &8[&9T6&8]"
						set line 3 of lore of {_tsh2} to "&c- &r&95 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh2}
					else if {su23::%player's uuid%} is true:
						set {_tempup} to a stone hoe named "&9Crop Mob Spawn &8[&9T7&8]"
						set line 1 of lore of {_tempup} to "&7----------"
						set line 2 of lore of {_tempup} to "&f→ &4+0.5%% chance to spawn a mob on harvest"
						set line 3 of lore of {_tempup} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempup} to "&7----------"
						enchant {_tempup} with luck of the sea 7
						set slot loop-integer of event-inventory to {_tempup}
						if {su24::%player's uuid%} = false:
							set line 5 of lore of {_tempup} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempup}
						else:
							set line 5 of lore of {_tempup} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempup}
				if loop-integer = 7:
					if {su24::%player's uuid%} = false:
						set {_tsh2} to barrier named "&cLocked"
						set line 1 of lore of {_tsh2} to "&4&lRequirements:"
						set line 2 of lore of {_tsh2} to "&c- &r&9Crop Mob Spawn &8[&9T7&8]"
						set line 3 of lore of {_tsh2} to "&c- &r&95 Learned Skills"
						set slot loop-integer of event-inventory to {_tsh2}
					else if {su24::%player's uuid%} is true:
						set {_tempup} to a stone hoe named "&9Crop Mob Spawn &8[&9T8&8]"
						set line 1 of lore of {_tempup} to "&7----------"
						set line 2 of lore of {_tempup} to "&f→ &4+0.5%% chance to spawn a mob on harvest"
						set line 3 of lore of {_tempup} to "&c&lCost: &a7 Skill Points"
						set line 4 of lore of {_tempup} to "&7----------"
						enchant {_tempup} with luck of the sea 8
						set slot loop-integer of event-inventory to {_tempup}
						if {su25::%player's uuid%} = false:
							set line 5 of lore of {_tempup} to "&cNot Purchased"
							set slot loop-integer of event-inventory to {_tempup}
						else:
							set line 5 of lore of {_tempup} to "&aPurchased"
							set slot loop-integer of event-inventory to {_tempup}
				if loop-integer = 8:
					set slot loop-integer of event-inventory to a nether star named "&cBack to &3&nSkill Tree"
				set {msskill::%player's uuid%::%loop-integer%} to slot loop-integer of event-inventory
				
on inventory click:
	if name of event-inventory is "&9&lMob Spawn Skill":
		cancel event
		event-inventory is not player's inventory
		if event-slot is 8:
			close player's inventory
			op the player
			make player execute command "/scythegui"
			deop the player
		if event-slot is 0:
			if {su7::%player's uuid%} is not set:
				set {su7::%player's uuid%} to false
			if:
				{su7::%player's uuid%} is false
				{su1::%player's uuid%} is true
			then:
				if player's tool is any hoe:
					if {skillpoints::%player's uuid%} is greater than or equal to 1: # FIRST MOB CHANCE UPGRADE
						subtract 1 from {skillpoints::%player's uuid%}
						add 0.5 to {mobspawnchance::%player's uuid%}
						send "&a&lUpgrade Purchased!" to player
						set {su7::%player's uuid%} to true
						add 1 to {amountofskills::%player's uuid%}
						set {shneedupdate::%player's uuid%} to true
						set {crneedupdate::%player's uuid%} to true
						set {faneedupdate::%player's uuid%} to true
						set {xpneedupdate::%player's uuid%} to true
						close player's inventory
					else:
						send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 1:
			if {su14::%player's uuid%} is not set:
				set {su14::%player's uuid%} to false
			if:
				{su14::%player's uuid%} is false
				{su7::%player's uuid%} is true
			then:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 3:
						if {skillpoints::%player's uuid%} is greater than or equal to 3: # SECOND MOB SPAWN UPGRADE
							subtract 3 from {skillpoints::%player's uuid%}
							add 0.5 to {mobspawnchance::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {su14::%player's uuid%} to true
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 2:
			if {su15::%player's uuid%} is not set:
				set {su15::%player's uuid%} to false
			if:
				{su15::%player's uuid%} is false
				{su14::%player's uuid%} is true
			then:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 4: # THIRD MOB CHANCE UPGRADE
							subtract 4 from {skillpoints::%player's uuid%}
							add 0.5 to {mobspawnchance::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {su15::%player's uuid%} to true
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 3:
			if {su21::%player's uuid%} is not set:
				set {su21::%player's uuid%} to false
			if:
				{su21::%player's uuid%} is false
				{su15::%player's uuid%} is true
			then:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 5: # FOURTH MOB SPAWN UPGRADE
							subtract 5 from {skillpoints::%player's uuid%}
							add 0.5 to {mobspawnchance::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {su21::%player's uuid%} to true
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 4:
			if {su22::%player's uuid%} is not set:
				set {su22::%player's uuid%} to false
			if:
				{su22::%player's uuid%} is false
				{su21::%player's uuid%} is true
			then:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 6: # FIFTH MOB SPAWN UPGRADE
							subtract 6 from {skillpoints::%player's uuid%}
							add 0.5 to {mobspawnchance::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {su22::%player's uuid%} to true
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 5:
			if {su23::%player's uuid%} is not set:
				set {su23::%player's uuid%} to false
			if:
				{su23::%player's uuid%} is false
				{su22::%player's uuid%} is true
			then:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # SIXTH MOB SPAWN UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							add 0.5 to {mobspawnchance::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {su23::%player's uuid%} to true
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 6:
			if {su24::%player's uuid%} is not set:
				set {su24::%player's uuid%} to false
			if:
				{su24::%player's uuid%} is false
				{su23::%player's uuid%} is true
			then:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # SEVENTH MOB SPAWN UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							add 0.5 to {mobspawnchance::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {su24::%player's uuid%} to true
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop
		else if event-slot is 7:
			if {su25::%player's uuid%} is not set:
				set {su25::%player's uuid%} to false
			if:
				{su25::%player's uuid%} is false
				{su24::%player's uuid%} is true
			then:
				if player's held item is any hoe:
					if {amountofskills::%player's uuid%} is greater than or equal to 5:
						if {skillpoints::%player's uuid%} is greater than or equal to 7: # EIGTH MOB SPAWN UPGRADE
							subtract 7 from {skillpoints::%player's uuid%}
							add 0.5 to {mobspawnchance::%player's uuid%}
							send "&a&lUpgrade Purchased!" to player
							set {su25::%player's uuid%} to true
							add 1 to {amountofskills::%player's uuid%}
							set {shneedupdate::%player's uuid%} to true
							set {crneedupdate::%player's uuid%} to true
							set {faneedupdate::%player's uuid%} to true
							set {xpneedupdate::%player's uuid%} to true
							close player's inventory
						else:
							send "&c&lYou do not have enough skill points to buy this upgrade or you haven't unlocked it yet!" to player
					else:
						send "&c&lYou have not learned enough skills to purchase this upgrade!" to player
				else:
					send "&c&lYou must be holding your scythe to upgrade it!" to player
			else:
				send "&c&lYou have already upgraded or haven't unlocked this skill!" to player
				stop